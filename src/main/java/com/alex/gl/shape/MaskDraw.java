package com.alex.gl.shape;

import org.lwjgl.BufferUtils;
import org.lwjgl.opengl.GL13;
import org.lwjgl.util.glu.Sphere;

import java.nio.ByteBuffer;

import static org.lwjgl.opengl.GL11.*;

/**
 * Created with IntelliJ IDEA.
 * User: Aisks
 * Date: 07.09.13
 * Time: 17:06
 * To change this template use File | Settings | File Templates.
 */
public class MaskDraw {

    private static byte[] fly = {
            0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
            0x03, b(0x80), 0x01, b(0xC0), 0x06, b(0xC0), 0x03, 0x60,
            0x04, 0x60, 0x06, 0x20, 0x04, 0x30, 0x0C, 0x20,
            0x04, 0x18, 0x18, 0x20, 0x04, 0x0C, 0x30, 0x20,
            0x04, 0x06, 0x60, 0x20, 0x44, 0x03, b(0xC0), 0x22,
            0x44, 0x01, b(0x80), 0x22, 0x44, 0x01, b(0x80), 0x22,
            0x44, 0x01, b(0x80), 0x22, 0x44, 0x01, b(0x80), 0x22,
            0x44, 0x01, b(0x80), 0x22, 0x44, 0x01, b(0x80), 0x22,
            0x66, 0x01, b(0x80), 0x66, 0x33, 0x01, b(0x80), b(0xCC),
            0x19, b(0x81), b(0x81), b(0x98), 0x0C, (byte) 0xC1, (byte) 0x83, 0x30,
            0x07, (byte) 0xE1, (byte) 0x87, (byte) 0xE0, 0x03, 0x3F, (byte) 0xFC, (byte) 0xC0,
            0x03, 0x31, (byte) 0x8C, (byte) 0xC0, 0x03, 0x33, (byte) 0xCC, (byte) 0xC0,
            0x06, 0x64, 0x26, 0x60, 0x0C, (byte) 0xCC, 0x33, 0x30,
            0x18, (byte) 0xCC, 0x33, 0x18, 0x10, (byte) 0xC4, 0x23, 0x08,
            0x10, 0x63, (byte) 0xC6, 0x08, 0x10, 0x30, 0x0C, 0x08,
            0x10, 0x18, 0x18, 0x08, 0x10, 0x00, 0x00, 0x08
    };

    private static ByteBuffer byteBuffer = (ByteBuffer) BufferUtils.createByteBuffer(8 * 16).put(fly).flip();

    private static Sphere sphere = new Sphere();

    public static void initStipple() {
        glEnable(GL_POLYGON_STIPPLE);
        glPolygonStipple(byteBuffer);
    }

    public static void drawRect() {
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
        glRecti(50, 50, 500, 500);
        glFlush();
    }

    public static void drawPolygon() {
        glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
        glPushMatrix();
        glTranslated(50, 50, 0);
        sphere.draw(50, 20, 5);
        glPopMatrix();
    }

    private static byte b(int value) {
        return (byte) value;
    }

}
